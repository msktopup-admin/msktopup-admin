{"version":3,"sources":["dataProvider/games/getGameList.js","dataProvider/games/getGame.js","dataProvider/session.js","dataProvider/games/createGame.js","dataProvider/games/editGame.js","dataProvider/games/deleteGame.js","dataProvider/packages/getPackageList.js","dataProvider/packages/getPackage.js","dataProvider/packages/deletePackage.js","dataProvider/packages/createPackage.js","dataProvider/orders/getOrderList.js","dataProvider/packages/editPackage.js","dataProvider/orders/editOrder.js","dataProvider/users/getUserList.js","dataProvider/index.js","authProvider/login.js","authProvider/index.js","components/games/gameList.jsx","components/games/createGame.jsx","components/games/editGame.jsx","components/packages/packageList.jsx","components/packages/createPackage.jsx","components/packages/editPackage.jsx","components/orders/allOrderList.js","components/orders/pendingOrderList.js","components/userList.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["API_URL","resource","params","a","console","log","fetch","method","serverResponse","json","resBody","err","games","map","value","game","id","_id","data","total","length","getGames","getHeader","header","localStorage","getItem","key","theHeader","Headers","k","append","url","headers","body","JSON","stringify","name","image","text","responseBody","createGame","updateGame","response","undefined","returnObject","deleteGame","thepackages","thepackage","getPackages","getPackage","deletePackage","price","createPackage","pagination","page","perPage","filter","q","status","Promise","reject","HttpError","orders","values","order","package","orderedBy","username","getOrders","thepcakage","updateUPackage","record","updateOrder","users","user","getUsers","customDataProvider","this","getGame","ids","state","isBlocked","password","request","Request","sersverResponse","Error","statusText","setItem","resolve","login","MyAuthProvider","error","removeItem","clear","GameList","props","List","Datagrid","TextField","source","EditButton","DeleteButton","Create","SimpleForm","TextInput","FileInput","EditGame","Edit","packageList","editPackage","PostFilter","Filter","SearchInput","alwaysOn","AllOrderList","CopyButton","className","onClick","copy","emailOrNumber","filters","OrderList","dataProvider","useDataProvider","refresh","useRefresh","ConfirmButton","editOrder","CancelButton","UserList","UnblockButton","editUser","BlockButton","DateField","dp","custmDataProvider","getList","myap","App","Admin","authProvider","Resource","list","PendingOrderList","title","create","edit","editGame","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.77545217.chunk.js","sourcesContent":["async function getGames(API_URL, resource, params) {\n  console.log(resource, API_URL);\n  const serverResponse = await fetch(`${API_URL}/get/games`, {\n    method: \"GET\",\n  });\n  const resBody = await serverResponse.json();\n  if (resBody.err) {\n    console.log(resBody);\n  }\n  console.log(resBody);\n\n  let games = resBody.map((value) => {\n    let game = value;\n    game.id = value._id;\n    return game;\n  });\n  console.log(\"Im returing\", games);\n  return { data: games, total: games.length };\n}\n\nexport default getGames;\n","async function getGames(API_URL, resource, params) {\n  const serverResponse = await fetch(`${API_URL}/get/games?id=${params.id}`, {\n    method: \"GET\",\n  });\n  console.log(\"the srver response body\", serverResponse);\n  const resBody = await serverResponse.json();\n  console.log(\"the body\", resBody);\n  if (resBody.err) {\n    console.log(resBody);\n  }\n\n  let game = resBody;\n  game.id = resBody._id;\n  console.log(\"the final game is:\", game);\n  return { data: game };\n}\n\nexport default getGames;\n","export function getHeader() {\n  let header = {};\n  header.id = localStorage.getItem(\"id\");\n  header.key = localStorage.getItem(\"key\");\n  if (!header.id || !header.key) {\n    return;\n  }\n  let theHeader = new Headers();\n\n  for (var k in header) {\n    theHeader.append(k, header[k]);\n  }\n\n  theHeader.append(\"Content-Type\", \"application/json\");\n\n  return theHeader;\n}\n\nexport function setHeader(header) {\n  localStorage.setItem(\"id\", header.id);\n  localStorage.setItem(\"key\", header.key);\n}\n\nexport function deleteHeader() {\n  localStorage.clear();\n  return;\n}\n","import { getHeader } from \"../session\";\n\nasync function createGame(API_URL, params) {\n  console.log(\"hello wrold from s/d/g/createGame.js\");\n  let game = params.data;\n  let url = `${API_URL}/admin/games`;\n\n  let serverResponse = await fetch(url, {\n    headers: getHeader(),\n    method: \"POST\",\n    body: JSON.stringify({\n      name: game.name,\n      image: game.image || \"/img/default.jpg\",\n    }),\n  });\n  let responseBody = await serverResponse.text();\n  console.log(responseBody);\n  game.id = responseBody._id;\n  return { data: game };\n}\n\nexport default createGame;\n","import { getHeader } from \"../session\";\n\nasync function updateGame(API_URL, params) {\n  console.log(\"The fucking params that is fucking me out is:\", params);\n  console.log(\"the fucking params is\", params);\n  let game = params.data;\n  let url = `${API_URL}/admin/games/${params.id}`;\n\n  let serverResponse = await fetch(url, {\n    headers: getHeader(),\n    method: \"PATCH\",\n    body: JSON.stringify({\n      name: game.name,\n      image: game.image || \"/img/default.jpg\",\n    }),\n  });\n  let responseBody = await serverResponse.text();\n  console.log(responseBody);\n  game.id = responseBody._id;\n  return { data: game };\n}\n\nexport default updateGame;\n","import { getHeader } from \"../session\";\n\nasync function deleteGame(API_URL, params) {\n  let url = `${API_URL}/admin/games/${params.id}`;\n  let response = await fetch(url, {\n    headers: getHeader(),\n    method: \"DELETE\",\n  });\n  console.log(\"the funckin server response\", response);\n  let responseBody = await response.json();\n  responseBody.id = responseBody._id;\n  responseBody._id = undefined;\n  console.log(\"The effing responseBody:\", responseBody);\n  let returnObject = {};\n  returnObject.data = responseBody;\n  console.log(\"the effing return object\", returnObject);\n  return returnObject;\n}\n\nexport default deleteGame;\n","import { getHeader } from \"../session\";\n\nasync function getPackages(API_URL, resource) {\n  console.log(\"this function has been called\");\n  const serverResponse = await fetch(`${API_URL}/get/packages`, {\n    method: \"GET\",\n    headers: getHeader(),\n  });\n  const resBody = await serverResponse.json();\n  if (resBody.err) {\n    console.log(resBody);\n  }\n  console.log(resBody);\n\n  let thepackages = resBody.map((value) => {\n    let thepackage = value;\n    thepackage.id = value._id;\n    return thepackage;\n  });\n  console.log(\"Im returing\", thepackages);\n  return { data: thepackages, total: thepackages.length };\n}\n\nexport default getPackages;\n","import { getHeader } from \"../session\";\n\nasync function getPackage(API_URL, resource, params) {\n  const serverResponse = await fetch(\n    `${API_URL}/get/packages?id=${params.id}`,\n    {\n      method: \"GET\",\n      headers: getHeader(),\n    }\n  );\n  console.log(\"the srver response body\", serverResponse);\n  const resBody = await serverResponse.json();\n  console.log(\"the body\", resBody);\n  if (resBody.err) {\n    console.log(resBody);\n  }\n\n  let thepackage = resBody;\n  thepackage.id = resBody._id;\n  console.log(\"the final thepackage is:\", thepackage);\n  return { data: thepackage };\n}\n\nexport default getPackage;\n","import { getHeader } from \"../session\";\n\nasync function deletePackage(API_URL, params) {\n  let url = `${API_URL}/admin/packages/${params.id}`;\n  let response = await fetch(url, {\n    method: \"DELETE\",\n    headers: getHeader(),\n  });\n  let responseBody = await response.json();\n  responseBody.id = responseBody._id;\n  responseBody._id = undefined;\n  let returnObject = {};\n  returnObject.data = responseBody;\n  return returnObject;\n}\n\nexport default deletePackage;\n","import { getHeader } from \"../session\";\n\nasync function createPackage(API_URL, params) {\n  let thepackage = params.data;\n  let url = `${API_URL}/admin/packages`;\n\n  let serverResponse = await fetch(url, {\n    headers: getHeader(),\n    method: \"POST\",\n    body: JSON.stringify({\n      name: thepackage.name,\n      price: thepackage.price,\n      game: thepackage.game || \"5fad192bb14f33d9676111d1\",\n    }),\n  });\n  let responseBody = await serverResponse.text();\n  console.log(responseBody);\n  thepackage.id = responseBody._id;\n  return { data: thepackage };\n}\n\nexport default createPackage;\n","import { HttpError } from \"react-admin\";\nimport { getHeader } from \"../session\";\n\nasync function getOrders(API_URL, resource, params) {\n  let url = `${API_URL}/admin/orders?page=${params.pagination.page}&&limit=${params.pagination.perPage}`;\n  if (resource === \"Pending Orders\") {\n    url += \"&&status=Pending\";\n  }\n  if (params.filter) {\n    console.log(params.filter.q);\n    url += \"&&id=\" + params.filter.q;\n  }\n  const serverResponse = await fetch(url, {\n    method: \"GET\",\n    headers: getHeader(),\n  });\n  if (serverResponse.status === 401) {\n    //return Promise.reject(\"unauthorized\");\n    return Promise.reject(\n      new HttpError(({} && \"unauthorized\") || \"unauthorized\", 401, {})\n    );\n  }\n  const resBody = await serverResponse.json();\n  if (resBody.err) {\n    console.log(resBody);\n  }\n  console.log(\"this is the responsebody\", resBody);\n\n  let orders = resBody.values.map((value) => {\n    let order = value;\n    order.id = value._id;\n    console.log(\"the package is\", value.package);\n    order.orderedBy = value.orderedBy.username;\n    order.name = value.package.name;\n    order.price = value.package.price;\n    return order;\n  });\n  console.log(\"Im returing\", orders);\n  return { data: orders, total: resBody.total };\n}\n\nexport default getOrders;\n","import { getHeader } from \"../session\";\n\nasync function updateUPackage(API_URL, params) {\n  let thepcakage = params.data;\n  let url = `${API_URL}/admin/packages/${params.id}`;\n\n  let serverResponse = await fetch(url, {\n    headers: getHeader(),\n    method: \"PATCH\",\n    body: JSON.stringify({\n      name: thepcakage.name,\n      price: thepcakage.price,\n    }),\n  });\n  let responseBody = await serverResponse.text();\n  console.log(\"response body 18:33\", responseBody);\n  thepcakage.id = responseBody._id;\n  return { data: thepcakage };\n}\n\nexport default updateUPackage;\n","import { getHeader } from \"../session\";\n\nasync function updateOrder(API_URL, record) {\n  let order = record;\n  let url = `${API_URL}/admin/orders?id=${record.id}&&status=${record.status}`;\n\n  let serverResponse = await fetch(url, {\n    headers: getHeader(),\n    method: \"PATCH\",\n  });\n  let responseBody = await serverResponse.text();\n  console.log(responseBody);\n  order.id = responseBody._id;\n  return { data: order };\n}\n\nexport default updateOrder;\n","import { getHeader } from \"../session\";\n\nasync function getUsers(API_URL, resource, params) {\n  let url = `${API_URL}/admin/users?page=${params.pagination.page}&&limit=${params.pagination.perPage}`;\n  if (params.filter.q) {\n    console.log(params.filter.q);\n    url += \"&&username=\" + params.filter.q;\n  }\n  const serverResponse = await fetch(url, {\n    method: \"GET\",\n    headers: getHeader(),\n  });\n  const resBody = await serverResponse.json();\n  console.log(\"Very Messy body:\", resBody);\n  if (resBody.err) {\n    console.log(resBody);\n  }\n  console.log(resBody);\n\n  let users = resBody.values.map((value) => {\n    let user = value;\n    user.id = value._id;\n    return user;\n  });\n  console.log(\"the users are:\", resBody);\n  return { data: users, total: resBody.total };\n}\n\nexport default getUsers;\n","import getGames from \"./games/getGameList\";\nimport getGame from \"./games/getGame\";\nimport createGame from \"./games/createGame\";\nimport updateGame from \"./games/editGame\";\nimport deleteGame from \"./games/deleteGame\";\nimport getPackages from \"./packages/getPackageList\";\nimport getPackage from \"./packages/getPackage\";\nimport deletePackage from \"./packages/deletePackage\";\nimport createPackage from \"./packages/createPackage\";\nimport getOrders from \"./orders/getOrderList\";\nimport updateUPackage from \"./packages/editPackage\";\nimport updateOrder from \"./orders/editOrder\";\nimport getUsers from \"./users/getUserList\";\nimport { getHeader } from \"./session\";\n\nexport default class customDataProvider {\n  constructor(API_URL) {\n    this.API_URL = API_URL;\n  }\n  async getList(resource, params) {\n    try {\n      if (resource === \"games\") {\n        return await getGames(this.API_URL);\n      }\n\n      if (resource === \"Pending Orders\" || resource === \"All Orders\") {\n        return getOrders(this.API_URL, resource, params);\n        //return await getPackages(this.API_URL);\n      }\n      if (resource === \"packages\") {\n        return getPackages(this.API_URL, resource);\n      }\n      if (resource === \"users\") {\n        return getUsers(this.API_URL, resource, params);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  }\n  async getOne(resource, params) {\n    try {\n      if (resource === \"games\") {\n        return getGame(this.API_URL, resource, params);\n      }\n\n      if (resource === \"orders\") {\n        //return await getPackages(this.API_URL);\n      }\n      if (resource === \"packages\") {\n        return await getPackage(this.API_URL, resource, params);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  }\n  async getMany() {}\n  getManyReference() {}\n  async create(resource, params) {\n    try {\n      if (resource === \"games\") {\n        return await createGame(this.API_URL, params);\n      }\n\n      if (resource === \"packages\") {\n        //return await getPackages(this.API_URL);\n        return await createPackage(this.API_URL, params);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  }\n  async update(resource, params) {\n    try {\n      if (resource === \"games\") {\n        return await updateGame(this.API_URL, params);\n      }\n\n      if (resource === \"packages\") {\n        //return await getPackages(this.API_URL);\n        return await updateUPackage(this.API_URL, params);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  }\n  updateMany() {}\n  async delete(resource, params) {\n    try {\n      if (resource === \"games\") {\n        return await deleteGame(this.API_URL, params);\n      }\n      if (resource === \"packages\") {\n        //return await dele\n        return await deletePackage(this.API_URL, params);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  }\n  async deleteMany(resource, params) {\n    try {\n      if (resource === \"games\") {\n        let ids = params.ids.map(async (id) => {\n          let record = await deleteGame(this.API_URL, { id: id });\n          return record.id;\n        });\n        return { data: ids };\n      }\n      if (resource === \"packages\") {\n        //return await dele\n        let ids = params.ids.map(async (id) => {\n          let record = await deletePackage(this.API_URL, { id: id });\n          return record.id;\n        });\n        return { data: ids };\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  }\n  async editOrder(record) {\n    return await updateOrder(this.API_URL, record);\n  }\n  async editUser(record) {\n    let user = record;\n    let state = \"unblock\";\n    if (record.isBlocked) {\n      state = \"block\";\n    }\n    let url = `${this.API_URL}/admin/users?id=${record.id}&&isBlocked=${state}`;\n\n    let serverResponse = await fetch(url, {\n      headers: getHeader(),\n      method: \"PATCH\",\n    });\n    let responseBody = await serverResponse.json();\n    console.log(responseBody);\n    user.id = responseBody._id;\n    return { data: user };\n  }\n}\n","async function login(API_URL, { username, password }) {\n  const request = new Request(API_URL + \"/auth/login\", {\n    method: \"POST\",\n    body: JSON.stringify({\n      username: username,\n      password: password,\n    }),\n    headers: new Headers({ \"Content-Type\": \"application/json\" }),\n  });\n  let sersverResponse = await fetch(request);\n  if (sersverResponse.status < 200 || sersverResponse.status >= 300) {\n    return Promise.reject(Error(sersverResponse.statusText));\n  }\n  let body = await sersverResponse.json();\n\n  console.log(\"the server responded with:\", body);\n\n  localStorage.setItem(\"id\", body.id);\n  localStorage.setItem(\"key\", body.key);\n  localStorage.setItem(\"privillage\", \"admin\");\n\n  return Promise.resolve();\n}\n\nexport default login;\n","import login from \"./login\";\n\nclass MyAuthProvider {\n  constructor(API_URL) {\n    this.API_URL = API_URL;\n  }\n  login(user) {\n    return login(this.API_URL, user);\n  }\n  checkError(error) {\n    const status = error.status;\n    if (status === 401 || status === 403) {\n      localStorage.removeItem(\"id\");\n      localStorage.removeItem(\"key\");\n      return Promise.reject();\n    }\n    // other error code (404, 500, etc): no need to log out\n    return Promise.resolve();\n  }\n  checkAuth() {\n    if (localStorage.getItem(\"id\") && localStorage.getItem(\"key\")) {\n      return Promise.resolve();\n    }\n    return Promise.reject();\n  }\n  logout() {\n    localStorage.clear();\n    return Promise.resolve();\n  }\n  getIdentity() {}\n  async getPermissions() {\n    if (localStorage.getItem(\"privillage\") === \"admin\") {\n      return Promise.resolve();\n    }\n    return Promise.reject();\n  }\n}\n\nexport default MyAuthProvider;\n","import * as React from \"react\";\nimport {\n  List,\n  Datagrid,\n  TextField,\n  EditButton,\n  DeleteButton,\n} from \"react-admin\";\n\nfunction GameList(props) {\n  console.log(\"props are\", props);\n  return (\n    <List {...props}>\n      <Datagrid>\n        <TextField source=\"id\" />\n        <TextField source=\"name\" />\n        <EditButton />\n        <DeleteButton />\n      </Datagrid>\n    </List>\n  );\n}\n\nexport default GameList;\n","import React from \"react\";\nimport { Create, SimpleForm, TextInput, FileInput } from \"react-admin\";\n\nconst createGame = (props) => {\n  return (\n    <Create {...props}>\n      <SimpleForm>\n        <TextInput source=\"name\" />\n        <FileInput source=\"image\" />\n      </SimpleForm>\n    </Create>\n  );\n};\n\nexport default createGame;\n","import React from \"react\";\nimport { SimpleForm, TextInput, FileInput, Edit } from \"react-admin\";\n\nconst EditGame = (props) => {\n  return (\n    <Edit {...props}>\n      <SimpleForm>\n        <TextInput source=\"name\" />\n        <FileInput source=\"image\" />\n      </SimpleForm>\n    </Edit>\n  );\n};\n\nexport default EditGame;\n","import * as React from \"react\";\nimport {\n  List,\n  Datagrid,\n  TextField,\n  EditButton,\n  DeleteButton,\n} from \"react-admin\";\n\nfunction packageList(props) {\n  console.log(\"props are\", props);\n  return (\n    <List {...props}>\n      <Datagrid>\n        <TextField source=\"id\" />\n        <TextField source=\"name\" />\n        <TextField source=\"price\" />\n        <EditButton />\n        <DeleteButton />\n      </Datagrid>\n    </List>\n  );\n}\n\nexport default packageList;\n","import React from \"react\";\nimport { Create, SimpleForm, TextInput, FileInput } from \"react-admin\";\n\nconst createGame = (props) => {\n  return (\n    <Create {...props}>\n      <SimpleForm>\n        <TextInput source=\"name\" />\n        <TextInput source=\"price\" />\n      </SimpleForm>\n    </Create>\n  );\n};\n\nexport default createGame;\n","import React from \"react\";\nimport { SimpleForm, TextInput, FileInput, Edit } from \"react-admin\";\n\nconst editPackage = (props) => {\n  return (\n    <Edit {...props}>\n      <SimpleForm>\n        <TextInput source=\"name\" />\n        <TextInput source=\"price\" />\n      </SimpleForm>\n    </Edit>\n  );\n};\n\nexport default editPackage;\n","import * as React from \"react\";\nimport { List, Datagrid, TextField, Filter, SearchInput } from \"react-admin\";\nimport copy from \"copy-to-clipboard\";\n\nconst PostFilter = (props) => (\n  <Filter {...props}>\n    <SearchInput source=\"q\" alwaysOn />\n  </Filter>\n);\n\nconst AllOrderList = (props) => {\n  const CopyButton = ({ record }) => {\n    return (\n      <button\n        className=\"btn btn-primary\"\n        onClick={async () => {\n          copy(record.emailOrNumber + \"|\" + record.password);\n        }}\n      >\n        Copy\n      </button>\n    );\n  };\n  return (\n    <List {...props} filters={<PostFilter />}>\n      <Datagrid>\n        <TextField source=\"id\" />\n        <CopyButton />\n        <TextField source=\"status\" />\n        <TextField source=\"orderedBy\" />\n        <TextField source=\"name\" />\n        <TextField source=\"price\" />\n        <TextField source=\"accountPlatform\" />\n        <TextField source=\"emailOrNumber\" />\n        <TextField source=\"password\" />\n        <TextField source=\"bkashNumber\" />\n      </Datagrid>\n    </List>\n  );\n};\n\nexport default AllOrderList;\n","import * as React from \"react\";\nimport {\n  List,\n  Datagrid,\n  TextField,\n  useDataProvider,\n  Filter,\n  SearchInput,\n  useRefresh,\n} from \"react-admin\";\nimport copy from \"copy-to-clipboard\";\n\nconst OrderList = (props) => {\n  const PostFilter = (props) => (\n    <Filter {...props}>\n      <SearchInput source=\"q\" alwaysOn />\n    </Filter>\n  );\n  console.log(\"props are\", props);\n  const dataProvider = useDataProvider();\n  const refresh = useRefresh();\n\n  const ConfirmButton = ({ record }) => {\n    return (\n      <button\n        className=\"btn btn-primary\"\n        onClick={async () => {\n          let response = await dataProvider.editOrder({\n            id: record.id,\n            status: \"complete\",\n          });\n          refresh();\n          console.log(response);\n        }}\n      >\n        Confirm\n      </button>\n    );\n  };\n  const CancelButton = ({ record }) => {\n    return (\n      <button\n        className=\"btn btn-danger\"\n        onClick={async () => {\n          let response = await dataProvider.editOrder({\n            id: record.id,\n            status: \"cancelled\",\n          });\n          refresh();\n          console.log(response);\n        }}\n      >\n        Cancel\n      </button>\n    );\n  };\n  const CopyButton = ({ record }) => {\n    return (\n      <button\n        className=\"btn btn-primary\"\n        onClick={async () => {\n          copy(record.emailOrNumber + \"|\" + record.password);\n        }}\n      >\n        Copy\n      </button>\n    );\n  };\n\n  return (\n    <List {...props} filters={<PostFilter />}>\n      <Datagrid>\n        <TextField source=\"id\" />\n        <CopyButton />\n        <TextField source=\"status\" />\n        <TextField source=\"orderedBy\" />\n        <TextField source=\"name\" />\n        <TextField source=\"price\" />\n        <TextField source=\"accountPlatform\" />\n        <TextField source=\"emailOrNumber\" />\n        <TextField source=\"password\" />\n        <TextField source=\"bkashNumber\" />\n        <ConfirmButton />\n        <CancelButton />\n      </Datagrid>\n    </List>\n  );\n};\n\nexport default OrderList;\n","import * as React from \"react\";\nimport {\n  List,\n  Datagrid,\n  TextField,\n  DateField,\n  useDataProvider,\n  useRefresh,\n  Filter,\n  SearchInput,\n} from \"react-admin\";\n\nconst UserList = (props) => {\n  const PostFilter = (props) => (\n    <Filter {...props}>\n      <SearchInput source=\"q\" alwaysOn />\n    </Filter>\n  );\n  const dataProvider = useDataProvider();\n  const refresh = useRefresh();\n  const UnblockButton = ({ record }) => {\n    if (!record.isBlocked) {\n      return null;\n    }\n    return (\n      <button\n        className=\"btn btn-primary\"\n        onClick={async () => {\n          let response = await dataProvider.editUser({\n            id: record.id,\n            isBlocked: false,\n          });\n          refresh();\n          console.log(response);\n        }}\n      >\n        Unblock\n      </button>\n    );\n  };\n  const BlockButton = ({ record }) => {\n    if (record.isBlocked) {\n      return null;\n    }\n    return (\n      <button\n        className=\"btn btn-danger\"\n        onClick={async () => {\n          let response = await dataProvider.editUser({\n            id: record.id,\n            isBlocked: true,\n          });\n          refresh();\n          console.log(response);\n        }}\n      >\n        Block\n      </button>\n    );\n  };\n  return (\n    <List {...props} filters={<PostFilter />}>\n      <Datagrid>\n        <TextField source=\"id\" />\n        <TextField source=\"username\" />\n        <TextField source=\"email\" />\n        <DateField source=\"joinedAt\" />\n        <UnblockButton />\n        <BlockButton />\n      </Datagrid>\n    </List>\n  );\n};\n\nexport default UserList;\n","import { Admin, Resource } from \"react-admin\";\nimport custmDataProvider from \"./dataProvider/index\";\nimport MyAuthProvider from \"./authProvider/index\";\nimport GameList from \"./components/games/gameList\";\nimport createGame from \"./components/games/createGame\";\nimport editGame from \"./components/games/editGame\";\nimport packageList from \"./components/packages/packageList\";\nimport createPackage from \"./components/packages/createPackage\";\nimport editPackage from \"./components/packages/editPackage\";\nimport AllOrderList from \"./components/orders/allOrderList.js\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport PendingOrderList from \"./components/orders/pendingOrderList\";\nimport UserList from \"./components/userList\";\n\nlet dp = new custmDataProvider(\n  \"https://ingame-item-topup-api.herokuapp.com/api\"\n);\nconsole.log(dp.getList());\nlet myap = new MyAuthProvider(\n  \"https://ingame-item-topup-api.herokuapp.com/api\"\n);\n\nfunction App() {\n  return (\n    <Admin dataProvider={dp} authProvider={myap}>\n      <Resource name=\"Pending Orders\" list={PendingOrderList} title=\"\" />\n      <Resource name=\"All Orders\" list={AllOrderList} title=\"\" />\n      <Resource name=\"users\" list={UserList} title=\"\" />\n      <Resource\n        name=\"games\"\n        list={GameList}\n        create={createGame}\n        edit={editGame}\n      />\n      <Resource\n        name=\"packages\"\n        list={packageList}\n        create={createPackage}\n        edit={editPackage}\n      />\n    </Admin>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}